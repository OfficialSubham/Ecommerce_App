// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  product_id          Int            @id @default(autoincrement())
  product_name        String
  product_description String?
  quantity            Int?
  avaibility          Avaibility?
  Images              Images[]
  price               Int
  OrderedItems        OrderedItems[]
  date                DateTime
  category            Category?
  productSize         productSize[]
}

model Images {
  image_id  Int     @id @default(autoincrement())
  productId Int
  imageUrl  String
  product   Product @relation(fields: [productId], references: [product_id], onDelete: Cascade)
  fileId    String?
}

model OrderDetails {
  order_id     Int            @id @default(autoincrement())
  name         String
  address      String
  email        String?
  phoneNo      String
  OrderedItems OrderedItems[]
}

model OrderedItems {
  id            Int          @id @default(autoincrement())
  productId     Int
  quantityOrder Int
  product       Product      @relation(fields: [productId], references: [product_id])
  orderedId     Int
  OrderDetails  OrderDetails @relation(fields: [orderedId], references: [order_id], onDelete: Cascade)
}

enum Avaibility {
  inStock
  OutOfStock
}

model productSize {
  id        Int     @id @default(autoincrement())
  size      Size?
  productId Int
  product   Product @relation(fields: [productId], references: [product_id], onDelete: Cascade)
}

enum Size {
  S
  M
  L
  XL
  XXL
}

enum Category {
  normalV
  playerV
}
